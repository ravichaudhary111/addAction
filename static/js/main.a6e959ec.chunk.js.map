{"version":3,"sources":["Fun.js","App.js","reportWebVitals.js","index.js"],"names":["Fun","useState","tStatus","settStatus","tType","settType","tDes","settDes","ttTime","settTime","flag","setFlag","view","setView","type","placeholder","value","onChange","e","target","onClick","tTYpe","tTime","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LAqEeA,MAnEf,WACI,MAA8BC,mBAAS,MAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,mBAAS,MAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAwBJ,mBAAS,MAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAA2BN,mBAAS,MAApC,mBAAOO,EAAP,KAAeC,EAAf,KACA,EAAwBR,oBAAS,GAAjC,mBAAOS,EAAP,KAAaC,EAAb,KAEA,EAAwBV,mBAAS,MAAjC,mBAAOW,EAAP,KAAaC,EAAb,KAiBA,OACI,gCACI,uBACIC,KAAK,OACLC,YAAY,aACZC,MAAOd,EACPe,SAAU,SAACC,GAAD,OAAOf,EAAWe,EAAEC,OAAOH,UAEzC,uBACIF,KAAK,OACLC,YAAY,WACZC,MAAOZ,EACPa,SAAU,SAACC,GAAD,OAAOb,EAASa,EAAEC,OAAOH,UAEvC,uBACIF,KAAK,OACLC,YAAY,UACZC,MAAOV,EACPW,SAAU,SAACC,GAAD,OAAOX,EAAQW,EAAEC,OAAOH,UAEtC,uBACIF,KAAK,OACLC,YAAY,WACZC,MAAOR,EACPS,SAAU,SAACC,GAAD,OAAOT,EAASS,EAAEC,OAAOH,UAEvC,wBAAQI,QA1ChB,WAOIP,EANc,CACVX,QAASA,EACTmB,MAAOjB,EACPE,KAAMA,EACNgB,MAAOd,IAGXG,GAAQ,GACRJ,EAAQ,MACRJ,EAAW,OAgCP,sBACA,wBAAQiB,QA/BhB,WACIT,GAAQ,IA8BJ,wBAGCD,EAAO,+BACJ,6BAAKE,EAAKV,UACV,6BAAKU,EAAKV,UACV,6BAAKU,EAAKS,QACV,6BAAKT,EAAKU,WACN,SC3DL,SAASC,IACtB,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,M,WCOSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UAAQ,cAACb,EAAD,QAEVc,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a6e959ec.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Fun() {\r\n    const [tStatus, settStatus] = useState(null);\r\n    const [tType, settType] = useState(null);\r\n    const [tDes, settDes] = useState(null);\r\n    const [ttTime, settTime] = useState(null);\r\n    const [flag, setFlag] = useState(false)\r\n\r\n    const [view, setView] = useState(null);\r\n    function addData() {\r\n        const oData = {\r\n            tStatus: tStatus,\r\n            tTYpe: tType,\r\n            tDes: tDes,\r\n            tTime: ttTime\r\n        };\r\n        setView(oData);\r\n        setFlag(true);\r\n        settDes(null);\r\n        settStatus(null);\r\n    }\r\n    function clearData() {\r\n        setFlag(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"taskstatus\"\r\n                value={tStatus}\r\n                onChange={(e) => settStatus(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"taskType\"\r\n                value={tType}\r\n                onChange={(e) => settType(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"taskdes\"\r\n                value={tDes}\r\n                onChange={(e) => settDes(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"tasktime\"\r\n                value={ttTime}\r\n                onChange={(e) => settTime(e.target.value)}\r\n            />\r\n            <button onClick={addData}>Add item</button>\r\n            <button onClick={clearData}>Clear Data</button>\r\n\r\n\r\n            {flag ? <ul>\r\n                <li>{view.tStatus}</li>\r\n                <li>{view.tStatus}</li>\r\n                <li>{view.tTYpe}</li>\r\n                <li>{view.tTime}</li>\r\n            </ul> : null\r\n            }\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Fun;\r\n","import Fun from \"./Fun\"\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Fun />\n    </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router><App /></Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}